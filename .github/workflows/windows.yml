name: Build for Windows 64-bit and 32-bit
on:
  workflow_call:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, i686]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SQLite
      run: |
        choco install sqlite
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.arch }}-pc-windows-msvc

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Build
      run: |
        cargo update -p sctgdesk-api-server
        DATABASE_URL=sqlite://$(pwd)/db_v2.sqlite3 cargo build --release --target ${{ matrix.arch }}-pc-windows-msvc
        cd target/${{ matrix.arch }}-pc-windows-msvc/release
        7z a -tzip /tmp/windows_${{ matrix.arch }}_${{ github.event.release.tag_name }}.zip hbbs.exe hbbr.exe rustdesk-utils.exe

    - name: Upload Release Assets binaries for Windows
      uses: softprops/action-gh-release@v1
      continue-on-error: true
      with:
        files: |
            /tmp/windows_${{ matrix.arch }}_${{ github.event.release.tag_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}